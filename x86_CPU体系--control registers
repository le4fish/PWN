盗来的一张关于控制寄存器的作用图
http://ilinuxkernel.com/wp-content/uploads/2011/06/062111_1434_x86x8664CPU1.png

各个控制寄存器的大致作用如下：

CR0：包含当前处理器运行的控制标志。

CR1：保留。

CR2：包含发生页面错误时的线性地址。

CR3：页面目录表（Page Directory Table）的物理地址。

CR4：包含处理器扩展功能的标志位。

CR8：提供对任务优先级寄存器（Task Priority Register）的读写（仅在64位模式下存在）。

对控制寄存器的读写是通过MOV CRn指令来实现


CR0介绍：
  保护控制位：
      PE（CR0的位0是启用保护（Protection Enable）标志）
      
        当设置该位时即开启了保护模式；当复位时即进入实地址模式。
        
        这个标志仅开启段级保护，而并没有启用分页机制。
        
        若要启用分页机制，那么PE和PG标志都要置位。
        
      PG（CR0的位31是分页（Paging）标志）
      
        当设置该位时即开启了分页机制；当复位时则禁止分页机制，此时所有线性地址等同于物理地址。
        
        在开启这个标志之前必须已经或者同时开启PE标志。 即若要启用分页机制，那么PE和PG标志都要置位。
        
      WP（CR0的位16是写保护（Write Proctect）标志）
      
        当设置该标志时，处理器会禁止超级用户程序（例如特权级0的程序）向用户级只读页面执行写操作；当该位复位时则反之。
         
        该标志有利于UNIX类操作系统在创建进程时实现写时复制（Copy on Write）技术。
        
      N（CR0的位5是协处理器错误（Numeric Error）标志）
        
        当设置该标志时，就启用了x87协处理器错误的内部报告机制；若复位该标志，那么就使用PC形式的x87协处理器错误报告机制。
        
        当NE为复位状态并且CPU的IGNNE输入引脚有信号时，那么数学协处理器x87错误将被忽略。
        
        当NE为复位状态并且CPU的IGNNE输入引脚无信号时，那么非屏蔽的数学协处理器x87错误将导致处理器通过FERR引脚在外部产生一个中断，
        
        并且在执行下一个等待形式浮点指令或WAIT/FWAIT指令之前立刻停止指令执行。
       
